# Docker Compose configuration for Jenkins with Docker-in-Docker (DinD) setup
# This setup allows Jenkins to build and run Docker containers within itself

version: '3.9'

# Network configuration 
networks:
  jenkins_dind:  # Custom network for internal Jenkins and Docker-in-Docker service communication
    driver: bridge

# Volume definitions - Persistent storage for Jenkins data and Docker certificates
volumes:
  jenkins-data:        # Stores Jenkins configuration, jobs, and workspace data
  docker-certs-ca:     # Docker CA certificates for secure communication
  docker-certs-client: # Docker client certificates for authentication
  docker-layer-cache:  # Docker layer cache for improved build performance

# Service definitions
services:
  # Docker-in-Docker (DinD) service - Provides Docker daemon running inside a container for Jenkins to use
  dind:
    image: docker:24-dind                    # Official Docker-in-Docker image
    container_name: dind                  # Fixed container name for easy reference
    privileged: true                      # Required for DinD to access host Docker daemon
    expose:
      - 2376                              # Expose Docker daemon port for Jenkins to connect
    restart: unless-stopped
    networks:
      jenkins_dind:                           # Connect to custom Jenkins network
        aliases:
          - docker                       # Alias 'docker' for easy access from Jenkins
    environment:
      - DOCKER_TLS_CERTDIR=/certs        # DOCKER_TLS_CERTDIR: Directory where Docker TLS certificates are stored
    volumes:
      - docker-certs-ca:/certs/ca           # Mount Docker CA certificates for secure communication
      - docker-certs-client:/certs/client   # Mount Docker client certificates for authentication
      - jenkins-data:/var/jenkins_home      # Share Jenkins data volume with Jenkins service
      - docker-layer-cache:/var/lib/docker  # Mount Docker layer cache for improved build performance

  # Jenkins service - CI/CD server with Docker integration
  jenkins:
    build:                               # custom image with CLI tool
      context: ./jenkins
      dockerfile: Dockerfile    
    container_name: jenkins               # Fixed container name for easy reference
    user: root                            # Run as root to access Docker socket
    depends_on:
      - dind
    networks:
      - jenkins_dind            # Connect to custom Jenkins network
    restart: unless-stopped
    environment:
      - DOCKER_HOST=tcp://docker:2376       # DOCKER_HOST: Points to the DinD service for Docker operation
      - DOCKER_CERT_PATH=/certs/client    # DOCKER_CERT_PATH: Path to Docker client certificates
      - DOCKER_TLS_VERIFY=1               # DOCKER_TLS_VERIFY: Enable TLS verification for Docker communication
    ports:
      - "8080:8080"                       # Web port - access Jenkins at http://localhost:8080
      - "50000:50000"                     # Agent communication port - for Jenkins agents to connect
    volumes:
      - jenkins-data:/var/jenkins_home          # Jenkins home directory - stores all Jenkins data
      - docker-certs-client:/certs/client:ro    # Mount Docker client certificates as read-only
      - docker-layer-cache:/var/lib/docker      # Mount Docker layer cache for improved build performance
      - /var/run/docker.sock:/var/run/docker.sock #provide docker CLI inside Jenkins container

